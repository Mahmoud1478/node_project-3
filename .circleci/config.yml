version: 2.1
# orgs contain basc recipes and reproducible actions (install node, aws, etc.)
orbs:
  node: circleci/node@5.0.3
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.4
  # different jobs are calles later in the workflows sections

jobs:
  build_back:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install:
          node-version: '16.18'
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - v1-npm-deps-{{ checksum "./back/package.json" }}
            # Find the most recently generated cache used from any branch
            - v1-npm-deps-
      - run:
          name : "install node modules"
          command: npm run back:install

      - save_cache:
          key: v1-npm-deps-{{ checksum "./back/package.json" }}
          paths:
            - .back/node_modules
      - run:
          name: "bulding back dist"
          command : npm run back:build
    
  build_front:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install:
          node-version: '18.12'
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - v1-npm-deps-{{ checksum "./front/package.json" }}
            # Find the most recently generated cache used from any branch
            - v1-npm-deps-
      - run:
          name : "install node modules"
          command: npm run front:install

      - save_cache:
          key: v1-npm-deps-{{ checksum "./front/package.json" }}
          paths:
            - .front/node_modules
      - run:
          name: "bulding front dist"
          command : npm run front:build


workflows:
  project_3:
    jobs:
      - build_back
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - build_front:
          requires:
            - hold